pipeline {
    agent any

    tools {
        jdk 'jdk-17'
        maven 'maven-3.9.6'
    }

    environment {
        APP_NAME = 'jenkins-job-dsl'
        RELEASE = '1.0.0'
        DOCKER_USER = 'm41na'
        NEXUS_CREDS = credentials('jenkins-nexus')
        NEXUS_DOCKER_REPO = 'http://192.168.1.18:8081/repository/docker-nexus/'
        IMAGE_NAME = "${DOCKER_USER}/${APP_NAME}"
        IMAGE_TAG = "${RELEASE}-${BUILD_NUMBER}"
    }

    stages {
        stage('checking tools...') {
            steps {
                sh 'java -version'
                sh 'mvn -version'
            }
        }

        stage('cleaning workspace...') {
            steps {
                cleanWs()
            }
        }
    
        stage('checkout from scm...') {
            steps {
                git branch: 'main', credentialsId: 'm41na', url: 'https://github.com/m41na/jenkins-job-dsl.git'
            }
        }
    
        stage('build application...') {
            steps {
                sh 'mvn clean package -DskipTests'
            }
        }
    
        stage('test application...') {
            steps {
                sh 'mvn test'
            }
        }

        stage('code quality scan...') {
            steps {
                script {
                    withSonarQubeEnv(credentialsId: 'jenkins-token'){
                        sh 'mvn sonar:sonar'
                    }
                }
            }
        }

        stage('code quality gate...') {
            steps {
                script {
                    waitForQualityGate(abortPipeline: false, credentialsId: 'jenkins-token')
                }
            }
        }

        stage('build docker image...'){
            steps {
                echo 'building docker image'
                sh "docker build -t $NEXUS_DOCKER_REPO/${IMAGE_NAME} -f docker/Dockerfile ."
            }
        }

        stage('publish docker image...') {
            steps {
                echo 'pushing image to docker hub'
                sh "docker push $NEXUS_DOCKER_REPO/${IMAGE_NAME}:${IMAGETAG}"
                sh "docker push $NEXUS_DOCKER_REPO/${IMAGE_NAME}:latest"
            }
        }
    }
}
